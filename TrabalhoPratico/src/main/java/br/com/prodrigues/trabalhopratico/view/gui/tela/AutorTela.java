package br.com.prodrigues.trabalhopratico.view.gui.tela;
import br.com.prodrigues.trabalhopratico.model.Autor;
import br.com.prodrigues.trabalhopratico.view.IViewCrud;
import br.com.prodrigues.trabalhopratico.view.gui.ViewGuiSimples;
import java.awt.Frame;
/**
 * @author prorodrigues
 **/
public class AutorTela extends ViewGuiSimples implements IViewCrud<Autor> {
    public static AutorTela getTela() {
        return AutorTela.tela;
    }
    public static void setTela(AutorTela tela) {
        AutorTela.tela = tela;
    }
    public AutorTela(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public static AutorTela getInstance(Frame parent, boolean modal) {
        if (tela == null) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(AutorTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            //</editor-fold>
            return new AutorTela(parent, modal);
        } else {
            return tela;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panRodape = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        labData = new javax.swing.JLabel();
        edtNome = new javax.swing.JTextField();
        edtData = new org.jdesktop.swingx.JXDatePicker();
        labTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Autor Tela");

        panRodape.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panRodape.setLayout(new java.awt.GridBagLayout());

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        panRodape.add(btnOk, new java.awt.GridBagConstraints());

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panRodape.add(btnCancel, new java.awt.GridBagConstraints());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        labNome.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 12, 0, 0);
        jPanel1.add(labNome, gridBagConstraints);

        labData.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 12, 0, 0);
        jPanel1.add(labData, gridBagConstraints);

        edtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtNomeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 261;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 12);
        jPanel1.add(edtNome, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 77, 12);
        jPanel1.add(edtData, gridBagConstraints);

        labTitulo.setFont(new java.awt.Font("Nimbus Mono L", 1, 18)); // NOI18N
        labTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labTitulo.setText("Titulo");
        labTitulo.setAutoscrolls(true);
        labTitulo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        labTitulo.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panRodape, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(labTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panRodape, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.checandoBtnCancel();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
       this.checandoBtnOk();
    }//GEN-LAST:event_btnOkActionPerformed

    private void edtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtNomeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private org.jdesktop.swingx.JXDatePicker edtData;
    private javax.swing.JTextField edtNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labData;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labTitulo;
    private javax.swing.JPanel panRodape;
    // End of variables declaration//GEN-END:variables
    private static AutorTela tela;
    private boolean confirmado = false;

    public boolean isConfirmado() {
        return confirmado;
    }

    public void setConfirmado(boolean confirmado) {
        this.confirmado = confirmado;
    }

    @Override
    public Autor create(Autor object) {
        this.limpaTela();
        this.preparaCreate();
        this.setVisible(true);
        return this.getScreenObject();
    }

    @Override
    public void read(Autor object) {
        this.preparaMostrar(object);
        this.setVisible(true);
    }

    @Override
    public Autor update(Autor object) {
        this.limpaTela();
        this.preparaUpdate(object);
        this.setVisible(true);
        Autor alterarScreenObject = object;
        if (confirmado) {
            alterarScreenObject = this.alterarScreenObject(object);
         } else if (!confirmado) {
            showMessage("CANCELADO PELO USUÁRIO!");
        } else if (alterarScreenObject == null) {
            showMessage("NÃO ENCONTRADO!");
        } else {
            showMessage("ALTERADO COM SUCESSO!");
        }
        return alterarScreenObject;
    }

    @Override
    public boolean delete(Autor object) {
        this.preparaDelete(object);
        this.setVisible(true);
        
        if (confirmado) {
            this.dispose();
         } else if (!confirmado) {
            showMessage("CANCELADO PELO USUÁRIO!");
            return false;
        } else if (object == null) {
            showMessage("NÃO ENCONTRADO!");
            return false;
        }
        return true;
    }

    @Override
    public Autor getScreenObject() {
        Autor retorno = new Autor();
        retorno.setName(edtNome.getText());
        retorno.setNascimento(edtData.getDate());
        return retorno;
    }

    @Override
    public void limpaTela() {
        labTitulo.setText("");
        edtNome.setText("");
        btnOk.setText("");
        btnCancel.setText("");
    }

    @Override
    public void preparaUpdate(Autor object) {
        labTitulo.setText("Dados do Autor");

        edtData.setDate(object.getNascimento());
        edtData.setEditable(true);
        edtData.setEnabled(true);
        edtNome.setText(object.getName());
        edtNome.setEditable(true);
        edtNome.setEnabled(true);
        
        btnOk.setText("Salvar");
        btnOk.setVisible(true);
        btnCancel.setText("Cancelar");
        btnCancel.setVisible(true);
    }
    
    private void checandoBtnOk(){
         if (edtNome.getText().trim().isEmpty()) {
            this.showMessage("Falta o Nome");
        } else {
            this.setConfirmado(true);
            this.dispose();
        }        
    }
    
    private void checandoBtnCancel(){
        this.setConfirmado(false);
        this.dispose();
    }
    
    private void preparaDelete(Autor object){
        labTitulo.setText("Dados do Autor");
        labNome.setText("Nome:");
        labData.setText("Data de nascimento:");
        
        edtData.setDate(object.getNascimento());
        edtData.setEditable(true);
        edtData.setEnabled(false);
        edtNome.setText(object.getName());
        edtNome.setEditable(true);
        edtNome.setEnabled(false);
        
        this.btnOk.setText("Deletar");
        this.btnOk.setVisible(true);
        this.btnCancel.setText("Cancelar");
        this.btnCancel.setVisible(true);
    }
    
    public Autor alterarScreenObject(Autor autor){
        autor.setName(edtNome.getText());
        autor.setNascimento(edtData.getDate());
        
        return autor;
    }
    
    public void preparaCreate(){
        labTitulo.setText("Cadastro de Autor");
        labNome.setText("Nome:");
        labData.setText("Data de nascimento:");
        edtNome.setText("");
        edtNome.setEditable(true);
        edtNome.setEnabled(true);

        edtData.setEditable(true);
        edtData.setEnabled(true);
        
        btnOk.setText("Salvar");
        btnOk.setVisible(true);
        btnCancel.setText("Cancelar");
        btnCancel.setVisible(true);
    }
    
    private void preparaMostrar(Autor object){
        labTitulo.setText("Dados do Autor");
        labNome.setText("Nome:");
        labData.setText("Data de nascimento:");
        edtData.setDate(object.getNascimento());
        edtData.setEditable(true);
        edtData.setEnabled(false);
        edtNome.setText(object.getName());
        edtNome.setEditable(true);
        edtNome.setEnabled(false);
        
        this.btnOk.setText("Ok");
        this.btnOk.setVisible(true);
        this.btnCancel.setVisible(false);
    }
}